{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport type { NextRequest } from \"next/server\";\r\n\r\nexport function middleware(req: NextRequest) {\r\n  const token = req.cookies.get(\"authToken\");\r\n\r\n  const protectedPaths = [\"/admin\", \"/dashboard\", \"/profile\", \"/certificates\", \"/progress\", \"/exams\"];\r\n  const isProtected = protectedPaths.some((path) => req.nextUrl.pathname.startsWith(path));\r\n\r\n  const isLoginOrReset = req.nextUrl.pathname === \"/login\" || req.nextUrl.pathname.startsWith(\"/reset-password\");\r\n\r\n  if (!token && isProtected && !isLoginOrReset) {\r\n    return NextResponse.redirect(new URL(\"/login\", req.url));\r\n  }\r\n\r\n  return NextResponse.next();\r\n}\r\n\r\n// ‚úîÔ∏è Aplica el middleware solo en las rutas que empiezan con estas secciones\r\nexport const config = {\r\n  matcher: [\r\n    \"/admin\",\r\n    \"/admin/:path*\",\r\n    \"/dashboard\",\r\n    \"/dashboard/:path*\",\r\n    \"/profile\",\r\n    \"/profile/:path*\",\r\n    \"/certificates\",\r\n    \"/certificates/:path*\",\r\n    \"/progress\",\r\n    \"/progress/:path*\",\r\n    \"/exams\",\r\n    \"/exams/:path*\",\r\n    \"/support\", // üîπ Agrega esta si tambi√©n quieres protegerla\r\n    \"/support/:path*\",\r\n  ],\r\n};\r\n\r\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,GAAgB;IACzC,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC;IAE9B,MAAM,iBAAiB;QAAC;QAAU;QAAc;QAAY;QAAiB;QAAa;KAAS;IACnG,MAAM,cAAc,eAAe,IAAI,CAAC,CAAC,OAAS,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAElF,MAAM,iBAAiB,IAAI,OAAO,CAAC,QAAQ,KAAK,YAAY,IAAI,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC;IAE5F,IAAI,CAAC,SAAS,eAAe,CAAC,gBAAgB;QAC5C,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,IAAI,GAAG;IACxD;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;AACH"}}]
}