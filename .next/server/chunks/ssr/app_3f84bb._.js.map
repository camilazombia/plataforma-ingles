{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/progress/components/ModuleCard.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { useTheme } from \"next-themes\";\r\nimport Link from \"next/link\";\r\nimport Image from \"next/image\";\r\n\r\ninterface ModuleCardProps {\r\n  id: number;\r\n  title: string;\r\n  status: \"completed\" | \"active\" | \"locked\";\r\n}\r\n\r\nconst ModuleCard: React.FC<ModuleCardProps> = ({ id, title, status }) => {\r\n  const { theme } = useTheme();\r\n  const moduleUrl = status === \"locked\" ? \"#\" : `/progress/module/${id}`; // ‚úÖ URL corregida\r\n\r\n  return (\r\n    <Link href={moduleUrl} passHref>\r\n      <div\r\n        className={`p-4 rounded-lg shadow-md border transition-transform duration-300 hover:scale-105 ${\r\n          status === \"locked\" ? \"cursor-not-allowed opacity-50\" : \"cursor-pointer\"\r\n        }`}\r\n      >\r\n        <span className=\"font-medium\">{title}</span>\r\n        <Image\r\n          src={\r\n            theme === \"dark\"\r\n              ? \"/assets/dark/lock.svg\"\r\n              : \"/assets/light/lock.svg\"\r\n          }\r\n          alt={status}\r\n          width={24}\r\n          height={24}\r\n        />\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ModuleCard;\r\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAQA,MAAM,aAAwC,CAAC,EAAE,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE;IAClE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,YAAY,WAAW,WAAW,MAAM,CAAC,iBAAiB,EAAE,IAAI,EAAE,kBAAkB;IAE1F,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM;QAAW,QAAQ;kBAC7B,cAAA,8OAAC;YACC,WAAW,CAAC,kFAAkF,EAC5F,WAAW,WAAW,kCAAkC,kBACxD;;8BAEF,8OAAC;oBAAK,WAAU;8BAAe;;;;;;8BAC/B,8OAAC,6HAAA,CAAA,UAAK;oBACJ,KACE,UAAU,SACN,0BACA;oBAEN,KAAK;oBACL,OAAO;oBACP,QAAQ;;;;;;;;;;;;;;;;;AAKlB;uCAEe"}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/progress/components/UserProgress.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Image from \"next/image\";\r\n\r\ninterface Level {\r\n  id: number;\r\n  label: string;\r\n  completedIcon: string; // Imagen para \"completado\" e \"in-progress\"\r\n  lockedIcon?: string; // Imagen para \"locked\" (opcional en el nivel 1)\r\n  state: \"in-progress\" | \"completed\" | \"locked\";\r\n}\r\n\r\ninterface UserProgressProps {\r\n  username: string;\r\n  levels: Level[];\r\n}\r\n\r\nconst UserProgress: React.FC<UserProgressProps> = ({ username, levels }) => {\r\n  return (\r\n    <div className=\"user-progress flex flex-col items-center gap-6 mb-6\">\r\n      {/* Encabezado de bienvenida */}\r\n      <div className=\"welcome text-center\">\r\n        <h1 className=\"text-2xl font-bold text-primary-900\">Bienvenido(a)</h1>\r\n        <h2 className=\"text-3xl font-extrabold text-primary\">{username}</h2>\r\n      </div>\r\n\r\n      {/* Barra de progreso de niveles */}\r\n      <div className=\"levels flex items-center justify-between w-full max-w-4xl relative\">\r\n        {levels.map((level, index) => (\r\n          <div\r\n            key={level.id}\r\n            className=\"flex items-center justify-center relative\"\r\n          >\r\n            {/* Icono del nivel */}\r\n            <div\r\n              className={`level__icon-container ${\r\n                level.state === \"locked\" ? \"locked\" : \"active\"\r\n              }`}\r\n            >\r\n              <Image\r\n                src={\r\n                  level.state === \"locked\" && level.lockedIcon\r\n                    ? level.lockedIcon\r\n                    : level.completedIcon\r\n                }\r\n                alt={level.label}\r\n                width={60}\r\n                height={60}\r\n                className=\"level__icon\"\r\n              />\r\n            </div>\r\n\r\n            {/* L√≠nea de conexi√≥n entre niveles */}\r\n            {index < levels.length - 1 && (\r\n              <div\r\n                className={`level__line ${\r\n                  levels[index + 1].state === \"locked\" ? \"locked\" : \"active\"\r\n                }`}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProgress;\r\n"],"names":[],"mappings":";;;;AACA;;;AAeA,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE;IACrE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;;;;;;;0BAIxD,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC;wBAEC,WAAU;;0CAGV,8OAAC;gCACC,WAAW,CAAC,sBAAsB,EAChC,MAAM,KAAK,KAAK,WAAW,WAAW,UACtC;0CAEF,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KACE,MAAM,KAAK,KAAK,YAAY,MAAM,UAAU,GACxC,MAAM,UAAU,GAChB,MAAM,aAAa;oCAEzB,KAAK,MAAM,KAAK;oCAChB,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;;;;;;4BAKb,QAAQ,OAAO,MAAM,GAAG,mBACvB,8OAAC;gCACC,WAAW,CAAC,YAAY,EACtB,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,KAAK,WAAW,WAAW,UAClD;;;;;;;uBA3BD,MAAM,EAAE;;;;;;;;;;;;;;;;AAmCzB;uCAEe"}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/exams/components/ExamButton.tsx"],"sourcesContent":["\"use client\";\r\n\r\ninterface ExamButtonProps {\r\n  isDisabled: boolean;\r\n  onClick: () => void; // üîπ Aseguramos que `onClick` es obligatorio\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ExamButton: React.FC<ExamButtonProps> = ({ isDisabled, onClick, children }) => {\r\n  return (\r\n    <button\r\n      disabled={isDisabled}\r\n      onClick={onClick} // üîπ Llamamos correctamente la funci√≥n\r\n      className={`p-3 rounded-lg font-semibold border-2 border-black ${\r\n        isDisabled ? \"bg-gray-400 text-black cursor-not-allowed\" : \"bg-primary hover:bg-primary-dark text-white\"\r\n      }`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ExamButton;\r\n  "],"names":[],"mappings":";;;;AAAA;;AAQA,MAAM,aAAwC,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC9E,qBACE,8OAAC;QACC,UAAU;QACV,SAAS;QACT,WAAW,CAAC,mDAAmD,EAC7D,aAAa,8CAA8C,+CAC3D;kBAED;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/exams/components/LevelCompletionModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface LevelCompletionModalProps {\r\n  level: \"Principiante\" | \"Intermedio\" | \"Avanzado\";\r\n  username: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst LevelCompletionModal: React.FC<LevelCompletionModalProps> = ({\r\n  level,\r\n  username,\r\n  onClose,\r\n}) => {\r\n  // Mapear √≠conos y textos seg√∫n el nivel\r\n  const levelData = {\r\n    Principiante: {\r\n      title: `¬°Felicidades, ${username}!`,\r\n      description: \"Has completado el Nivel Principiante.\",\r\n      icon: \"/assets/level-1-completed.png\",\r\n    },\r\n    Intermedio: {\r\n      title: `¬°Felicidades, ${username}!`,\r\n      description: \"Has completado el Nivel Intermedio.\",\r\n      icon: \"/assets/level-2-completed.png\",\r\n    },\r\n    Avanzado: {\r\n      title: `Congratulations, ${username}!`,\r\n      description: \"You‚Äôve completed the Advanced Level.\",\r\n      icon: \"/assets/level-3-completed.png\",\r\n    },\r\n  };\r\n\r\n  const { title, description, icon } = levelData[level];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div className=\"bg-white rounded-lg p-6 shadow-lg max-w-md w-full relative text-center\">\r\n        {/* Bot√≥n de cerrar */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-neutral-600 hover:text-primary\"\r\n        >\r\n          ‚úï\r\n        </button>\r\n\r\n        {/* Contenido del modal */}\r\n        <div className=\"flex flex-col items-center gap-4\">\r\n          {/* √çcono del nivel */}\r\n          <img\r\n            src={icon}\r\n            alt={`Nivel ${level} completado`}\r\n            className=\"w-24 h-24\"\r\n          />\r\n\r\n          {/* T√≠tulo */}\r\n          <h2 className=\"H32 text-primary-900\">{title}</h2>\r\n\r\n          {/* Descripci√≥n */}\r\n          <p className=\"P16 text-neutral-600\">{description}</p>\r\n\r\n          {/* Bot√≥n para ver certificado */}\r\n          <button\r\n            onClick={() => alert(\"Navegar al certificado\")} // Aqu√≠ enlazas la navegaci√≥n real\r\n            className=\"button--secondary mt-4\"\r\n          >\r\n            Ver Certificado\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelCompletionModal;\r\n    "],"names":[],"mappings":";;;;AAAA;;AAUA,MAAM,uBAA4D,CAAC,EACjE,KAAK,EACL,QAAQ,EACR,OAAO,EACR;IACC,wCAAwC;IACxC,MAAM,YAAY;QAChB,cAAc;YACZ,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;YACnC,aAAa;YACb,MAAM;QACR;QACA,YAAY;YACV,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;YACnC,aAAa;YACb,MAAM;QACR;QACA,UAAU;YACR,OAAO,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;YACtC,aAAa;YACb,MAAM;QACR;IACF;IAEA,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC,MAAM;IAErD,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;8BAKD,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BACC,KAAK;4BACL,KAAK,CAAC,MAAM,EAAE,MAAM,WAAW,CAAC;4BAChC,WAAU;;;;;;sCAIZ,8OAAC;4BAAG,WAAU;sCAAwB;;;;;;sCAGtC,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;sCAGrC,8OAAC;4BACC,SAAS,IAAM,MAAM;4BACrB,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe"}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 282, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/progress/pages/ProgressPage.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport levels from \"../pages/module/[id]/data/modules\"; // ‚úÖ Aseg√∫rate de que la ruta es correcta\r\nimport ModuleCard from \"../../progress/components/ModuleCard\";\r\nimport UserProgress from \"../../progress/components/UserProgress\";\r\nimport ExamButton from \"../../exams/components/ExamButton\";\r\nimport LevelCompletionModal from \"../../exams/components/LevelCompletionModal\";\r\nimport { useState } from \"react\";\r\n\r\nconst ProgressPage: React.FC = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentLevel, setCurrentLevel] = useState<\"Principiante\" | \"Intermedio\" | \"Avanzado\">(\"Principiante\");\r\n  const [isExamCompleted, setIsExamCompleted] = useState(false);\r\n\r\n  const handleExamCompletion = (levelTitle: string) => {\r\n    setCurrentLevel(levelTitle as \"Principiante\" | \"Intermedio\" | \"Avanzado\");\r\n    setShowModal(true);\r\n    setIsExamCompleted(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      {/* üìå Barra de progreso del usuario */}\r\n      <UserProgress\r\n        username=\"Camila G√≥mez\"\r\n        levels={[\r\n          {\r\n            id: 1,\r\n            label: \"Principiante\",\r\n            completedIcon: \"/assets/level-1-completed.png\",\r\n            lockedIcon: undefined, // üîπ El primer nivel no est√° bloqueado\r\n            state: \"completed\",\r\n          },\r\n          {\r\n            id: 2,\r\n            label: \"Intermedio\",\r\n            completedIcon: \"/assets/level-2-completed.png\",\r\n            lockedIcon: \"/assets/level-2-locked.png\",\r\n            state: \"in-progress\",\r\n          },\r\n          {\r\n            id: 3,\r\n            label: \"Avanzado\",\r\n            completedIcon: \"/assets/level-3-completed.png\",\r\n            lockedIcon: \"/assets/level-3-locked.png\",\r\n            state: \"locked\",\r\n          },\r\n        ]}\r\n      />\r\n\r\n      {/* üìå Niveles y m√≥dulos */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {levels.map((level) => {\r\n          const allModulesCompleted = level.modules.every((module) => module.status === \"completed\");\r\n\r\n          return (\r\n            <div key={level.id} className=\"flex flex-col gap-4\">\r\n              <h2 className=\"text-lg font-bold text-primary\">{level.title}</h2>\r\n              <p className=\"text-sm text-neutral-600\">{level.subtitle}</p>\r\n\r\n              {/* üîπ Renderiza los m√≥dulos del nivel */}\r\n              <div className=\"flex flex-col gap-2\">\r\n                {level.modules.map((module) => (\r\n                  <ModuleCard\r\n                    key={module.id}\r\n                    id={module.id} // ‚úÖ SE PASA EL ID CORRECTAMENTE\r\n                    title={module.title}\r\n                    status={module.status}\r\n                  />\r\n                ))}\r\n              </div>\r\n\r\n              {/* üìå Bot√≥n para el examen del nivel */}\r\n              <div className=\"mt-6 flex flex-col items-center\">\r\n                <p className=\"p16 text-neutral-600 mb-4\">\r\n                  {allModulesCompleted\r\n                    ? `Avanza al examen del nivel ${level.title}`\r\n                    : `Inicia el examen del nivel ${level.title}`}\r\n                </p>\r\n                <ExamButton\r\n                  isDisabled={!allModulesCompleted || isExamCompleted}\r\n                  onClick={() => handleExamCompletion(level.title)}\r\n                >\r\n                  Comenzar examen\r\n                </ExamButton>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {/* üìå Modal de finalizaci√≥n de nivel */}\r\n      {showModal && (\r\n        <LevelCompletionModal\r\n          level={currentLevel}\r\n          username=\"Camila G√≥mez\"\r\n          onClose={() => setShowModal(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressPage;\r\n"],"names":[],"mappings":";;;;;;;;;AAIA;AACA;AACA;AACA;AACA;AARA;;;;;;;;AAUA,MAAM,eAAyB;IAC7B,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAA8C;IAC7F,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,MAAM,uBAAuB,CAAC;QAC5B,gBAAgB;QAChB,aAAa;QACb,mBAAmB;IACrB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC,8IAAA,CAAA,UAAY;gBACX,UAAS;gBACT,QAAQ;oBACN;wBACE,IAAI;wBACJ,OAAO;wBACP,eAAe;wBACf,YAAY;wBACZ,OAAO;oBACT;oBACA;wBACE,IAAI;wBACJ,OAAO;wBACP,eAAe;wBACf,YAAY;wBACZ,OAAO;oBACT;oBACA;wBACE,IAAI;wBACJ,OAAO;wBACP,eAAe;wBACf,YAAY;wBACZ,OAAO;oBACT;iBACD;;;;;;0BAIH,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC;oBACX,MAAM,sBAAsB,MAAM,OAAO,CAAC,KAAK,CAAC,CAAC,SAAW,OAAO,MAAM,KAAK;oBAE9E,qBACE,8OAAC;wBAAmB,WAAU;;0CAC5B,8OAAC;gCAAG,WAAU;0CAAkC,MAAM,KAAK;;;;;;0CAC3D,8OAAC;gCAAE,WAAU;0CAA4B,MAAM,QAAQ;;;;;;0CAGvD,8OAAC;gCAAI,WAAU;0CACZ,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,uBAClB,8OAAC,4IAAA,CAAA,UAAU;wCAET,IAAI,OAAO,EAAE;wCACb,OAAO,OAAO,KAAK;wCACnB,QAAQ,OAAO,MAAM;uCAHhB,OAAO,EAAE;;;;;;;;;;0CASpB,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;wCAAE,WAAU;kDACV,sBACG,CAAC,2BAA2B,EAAE,MAAM,KAAK,EAAE,GAC3C,CAAC,2BAA2B,EAAE,MAAM,KAAK,EAAE;;;;;;kDAEjD,8OAAC,yIAAA,CAAA,UAAU;wCACT,YAAY,CAAC,uBAAuB;wCACpC,SAAS,IAAM,qBAAqB,MAAM,KAAK;kDAChD;;;;;;;;;;;;;uBA1BK,MAAM,EAAE;;;;;gBAgCtB;;;;;;YAID,2BACC,8OAAC,mJAAA,CAAA,UAAoB;gBACnB,OAAO;gBACP,UAAS;gBACT,SAAS,IAAM,aAAa;;;;;;;;;;;;AAKtC;uCAEe"}},
    {"offset": {"line": 440, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}