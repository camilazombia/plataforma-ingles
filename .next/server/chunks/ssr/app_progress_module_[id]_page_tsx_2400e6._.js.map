{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/progress/module/%5Bid%5D/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { useParams, useRouter } from \"next/navigation\";\r\nimport questionsData from \"../../data/questions\"; // üìå Ajusta la ruta seg√∫n sea necesario\r\n\r\nconst ExamPage = () => {\r\n  const { moduleId } = useParams();\r\n  const router = useRouter();\r\n  const [questions, setQuestions] = useState([]);\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [answers, setAnswers] = useState<{ [key: number]: string }>({});\r\n  const [score, setScore] = useState<number | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    console.log(\"üìå Cargando examen para moduleId:\", moduleId);\r\n    \r\n    if (moduleId && questionsData[moduleId]) {\r\n      setQuestions(questionsData[moduleId]);\r\n    } else {\r\n      console.error(`‚ùå No se encontraron preguntas para el m√≥dulo ${moduleId}`);\r\n      setQuestions([]); // üî• Evita que `questions` sea undefined\r\n    }\r\n    setLoading(false);\r\n  }, [moduleId]);\r\n\r\n  const handleAnswer = (selectedOption: string) => {\r\n    setAnswers((prev) => ({\r\n      ...prev,\r\n      [currentQuestion]: selectedOption,\r\n    }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (!answers[currentQuestion]) {\r\n      alert(\"Por favor, selecciona una respuesta.\");\r\n      return;\r\n    }\r\n    if (currentQuestion < questions.length - 1) {\r\n      setCurrentQuestion(currentQuestion + 1);\r\n    } else {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentQuestion > 0) {\r\n      setCurrentQuestion(currentQuestion - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let correctCount = 0;\r\n    questions.forEach((question, index) => {\r\n      if (answers[index] === question.correctAnswer) {\r\n        correctCount += 1;\r\n      }\r\n    });\r\n\r\n    const finalScore = (correctCount / questions.length) * 10;\r\n    setScore(finalScore);\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6 min-h-screen flex flex-col items-center bg-gray-100\">\r\n      <button onClick={() => router.back()} className=\"absolute top-4 left-4 px-4 py-2 bg-gray-200 rounded\">\r\n        ‚¨Ö Volver\r\n      </button>\r\n\r\n      <h1 className=\"text-2xl font-bold text-center mt-4\">Desaf√≠o de Conocimiento</h1>\r\n\r\n      {loading ? (\r\n        <p className=\"text-center text-gray-500\">Cargando preguntas...</p>\r\n      ) : questions.length === 0 ? (\r\n        <p className=\"text-center text-red-500\">‚ö†Ô∏è No hay preguntas disponibles para este m√≥dulo.</p>\r\n      ) : (\r\n        <>\r\n          <p className=\"text-center text-gray-600\">{questions[currentQuestion]?.title || \"Pregunta sin t√≠tulo\"}</p>\r\n          <p className=\"text-right text-gray-500\">Pregunta {currentQuestion + 1} de {questions.length}</p>\r\n\r\n          {/* Opciones de respuesta */}\r\n          <div className=\"mt-4\">\r\n            {questions[currentQuestion].options.map((option: string, index: number) => (\r\n              <button\r\n                key={index}\r\n                className={`block w-full p-2 border rounded mb-2 ${\r\n                  answers[currentQuestion] === option ? \"bg-blue-500 text-white\" : \"bg-white\"\r\n                }`}\r\n                onClick={() => handleAnswer(option)}\r\n              >\r\n                {option}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          <div className=\"flex justify-between mt-6 w-full max-w-lg\">\r\n            <button onClick={handlePrevious} disabled={currentQuestion === 0} className=\"px-4 py-2 border rounded\">\r\n              Anterior Pregunta\r\n            </button>\r\n            <button onClick={handleNext} className=\"px-4 py-2 bg-blue-500 text-white rounded\">\r\n              {currentQuestion === questions.length - 1 ? \"Finalizar\" : \"Siguiente\"}\r\n            </button>\r\n          </div>\r\n\r\n          {score !== null && (\r\n            <p className=\"mt-4 text-lg font-semibold text-center\">\r\n              Tu puntuaci√≥n: {score} / 10\r\n            </p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}