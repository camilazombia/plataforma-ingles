{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/progress/components/ModuleCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { useTheme } from \"next-themes\";\r\nimport Link from \"next/link\";\r\n\r\ninterface ModuleCardProps {\r\n  title: string;\r\n  status: \"completed\" | \"active\" | \"locked\";\r\n  href?: string; // Propiedad para la URL del módulo\r\n}\r\n\r\nconst ModuleCard: React.FC<ModuleCardProps> = ({ title, status, href }) => {\r\n  const { theme } = useTheme();\r\n\r\n  const getStyles = () => {\r\n    switch (status) {\r\n      case \"completed\":\r\n        return \"module module-card-completed\";\r\n      case \"active\":\r\n        return \"module module-card-active cursor-pointer\";\r\n      case \"locked\":\r\n        return \"module module-card-locked cursor-not-allowed\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const getIconSrc = () => {\r\n    switch (status) {\r\n      case \"completed\":\r\n        return theme === \"dark\"\r\n          ? \"/assets/dark/check.svg\"\r\n          : \"/assets/light/check.svg\";\r\n      case \"active\":\r\n        return theme === \"dark\"\r\n          ? \"/assets/dark/lock-open.svg\"\r\n          : \"/assets/light/lock-open.svg\";\r\n      case \"locked\":\r\n        return theme === \"dark\"\r\n          ? \"/assets/dark/lock.svg\"\r\n          : \"/assets/light/lock.svg\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Link href={status === \"locked\" ? \"#\" : href || \"\"}>\r\n      <div\r\n        className={`flex items-center justify-between p-4 rounded-lg shadow-sm transition-transform duration-300 hover:scale-105 ${getStyles()}`}\r\n        aria-disabled={status === \"locked\"}\r\n      >\r\n        <span className=\"font-medium\">{title}</span>\r\n        <img src={getIconSrc()} alt={status} className=\"module-icon\" />\r\n      </div>\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default ModuleCard;\r\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAYA,MAAM,aAAwC,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;IACpE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,gJAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,YAAY;QAChB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,aAAa;QACjB,OAAQ;YACN,KAAK;gBACH,OAAO,UAAU,SACb,2BACA;YACN,KAAK;gBACH,OAAO,UAAU,SACb,+BACA;YACN,KAAK;gBACH,OAAO,UAAU,SACb,0BACA;YACN;gBACE,OAAO;QACX;IACF;IAEA,qBACE,8OAAC,4JAAA,CAAA,UAAI;QAAC,MAAM,WAAW,WAAW,MAAM,QAAQ;kBAC9C,cAAA,8OAAC;YACC,WAAW,CAAC,6GAA6G,EAAE,aAAa;YACxI,iBAAe,WAAW;;8BAE1B,8OAAC;oBAAK,WAAU;8BAAe;;;;;;8BAC/B,8OAAC;oBAAI,KAAK;oBAAc,KAAK;oBAAQ,WAAU;;;;;;;;;;;;;;;;;AAIvD;uCAEe"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/progress/components/UserProgress.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Image from \"next/image\";\r\n\r\ninterface Level {\r\n  id: number;\r\n  label: string;\r\n  completedIcon: string; // Imagen para \"completado\" e \"in-progress\"\r\n  lockedIcon?: string; // Imagen para \"locked\" (opcional en el nivel 1)\r\n  state: \"in-progress\" | \"completed\" | \"locked\";\r\n}\r\n\r\ninterface UserProgressProps {\r\n  username: string;\r\n  levels: Level[];\r\n}\r\n\r\nconst UserProgress: React.FC<UserProgressProps> = ({ username, levels }) => {\r\n  return (\r\n    <div className=\"user-progress flex flex-col items-center gap-6 mb-6\">\r\n      {/* Encabezado de bienvenida */}\r\n      <div className=\"welcome text-center\">\r\n        <h1 className=\"text-2xl font-bold text-primary-900\">Bienvenido(a)</h1>\r\n        <h2 className=\"text-3xl font-extrabold text-primary\">{username}</h2>\r\n      </div>\r\n\r\n      {/* Barra de progreso de niveles */}\r\n      <div className=\"levels flex items-center justify-between w-full max-w-4xl relative\">\r\n        {levels.map((level, index) => (\r\n          <div\r\n            key={level.id}\r\n            className=\"flex items-center justify-center relative\"\r\n          >\r\n            {/* Icono del nivel */}\r\n            <div\r\n              className={`level__icon-container ${\r\n                level.state === \"locked\" ? \"locked\" : \"active\"\r\n              }`}\r\n            >\r\n              <Image\r\n                src={\r\n                  level.state === \"locked\" && level.lockedIcon\r\n                    ? level.lockedIcon\r\n                    : level.completedIcon\r\n                }\r\n                alt={level.label}\r\n                width={60}\r\n                height={60}\r\n                className=\"level__icon\"\r\n              />\r\n            </div>\r\n\r\n            {/* Línea de conexión entre niveles */}\r\n            {index < levels.length - 1 && (\r\n              <div\r\n                className={`level__line ${\r\n                  levels[index + 1].state === \"locked\" ? \"locked\" : \"active\"\r\n                }`}\r\n              />\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProgress;\r\n"],"names":[],"mappings":";;;;AACA;;;AAeA,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE;IACrE,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCAAsC;;;;;;kCACpD,8OAAC;wBAAG,WAAU;kCAAwC;;;;;;;;;;;;0BAIxD,8OAAC;gBAAI,WAAU;0BACZ,OAAO,GAAG,CAAC,CAAC,OAAO,sBAClB,8OAAC;wBAEC,WAAU;;0CAGV,8OAAC;gCACC,WAAW,CAAC,sBAAsB,EAChC,MAAM,KAAK,KAAK,WAAW,WAAW,UACtC;0CAEF,cAAA,8OAAC,6HAAA,CAAA,UAAK;oCACJ,KACE,MAAM,KAAK,KAAK,YAAY,MAAM,UAAU,GACxC,MAAM,UAAU,GAChB,MAAM,aAAa;oCAEzB,KAAK,MAAM,KAAK;oCAChB,OAAO;oCACP,QAAQ;oCACR,WAAU;;;;;;;;;;;4BAKb,QAAQ,OAAO,MAAM,GAAG,mBACvB,8OAAC;gCACC,WAAW,CAAC,YAAY,EACtB,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,KAAK,WAAW,WAAW,UAClD;;;;;;;uBA3BD,MAAM,EAAE;;;;;;;;;;;;;;;;AAmCzB;uCAEe"}},
    {"offset": {"line": 170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/exams/components/ExamButton.tsx"],"sourcesContent":["\"use client\";\r\n\r\ninterface ExamButtonProps {\r\n  isDisabled: boolean;\r\n  onClick: () => void; // 🔹 Aseguramos que `onClick` es obligatorio\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst ExamButton: React.FC<ExamButtonProps> = ({ isDisabled, onClick, children }) => {\r\n  return (\r\n    <button\r\n      disabled={isDisabled}\r\n      onClick={onClick} // 🔹 Llamamos correctamente la función\r\n      className={`p-3 rounded-lg font-semibold border-2 border-black ${\r\n        isDisabled ? \"bg-gray-400 text-black cursor-not-allowed\" : \"bg-primary hover:bg-primary-dark text-white\"\r\n      }`}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ExamButton;\r\n  "],"names":[],"mappings":";;;;AAAA;;AAQA,MAAM,aAAwC,CAAC,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE;IAC9E,qBACE,8OAAC;QACC,UAAU;QACV,SAAS;QACT,WAAW,CAAC,mDAAmD,EAC7D,aAAa,8CAA8C,+CAC3D;kBAED;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/exams/components/LevelCompletionModal.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\n\r\ninterface LevelCompletionModalProps {\r\n  level: \"Principiante\" | \"Intermedio\" | \"Avanzado\";\r\n  username: string;\r\n  onClose: () => void;\r\n}\r\n\r\nconst LevelCompletionModal: React.FC<LevelCompletionModalProps> = ({\r\n  level,\r\n  username,\r\n  onClose,\r\n}) => {\r\n  // Mapear íconos y textos según el nivel\r\n  const levelData = {\r\n    Principiante: {\r\n      title: `¡Felicidades, ${username}!`,\r\n      description: \"Has completado el Nivel Principiante.\",\r\n      icon: \"/assets/level-1-completed.png\",\r\n    },\r\n    Intermedio: {\r\n      title: `¡Felicidades, ${username}!`,\r\n      description: \"Has completado el Nivel Intermedio.\",\r\n      icon: \"/assets/level-2-completed.png\",\r\n    },\r\n    Avanzado: {\r\n      title: `Congratulations, ${username}!`,\r\n      description: \"You’ve completed the Advanced Level.\",\r\n      icon: \"/assets/level-3-completed.png\",\r\n    },\r\n  };\r\n\r\n  const { title, description, icon } = levelData[level];\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div className=\"bg-white rounded-lg p-6 shadow-lg max-w-md w-full relative text-center\">\r\n        {/* Botón de cerrar */}\r\n        <button\r\n          onClick={onClose}\r\n          className=\"absolute top-4 right-4 text-neutral-600 hover:text-primary\"\r\n        >\r\n          ✕\r\n        </button>\r\n\r\n        {/* Contenido del modal */}\r\n        <div className=\"flex flex-col items-center gap-4\">\r\n          {/* Ícono del nivel */}\r\n          <img\r\n            src={icon}\r\n            alt={`Nivel ${level} completado`}\r\n            className=\"w-24 h-24\"\r\n          />\r\n\r\n          {/* Título */}\r\n          <h2 className=\"H32 text-primary-900\">{title}</h2>\r\n\r\n          {/* Descripción */}\r\n          <p className=\"P16 text-neutral-600\">{description}</p>\r\n\r\n          {/* Botón para ver certificado */}\r\n          <button\r\n            onClick={() => alert(\"Navegar al certificado\")} // Aquí enlazas la navegación real\r\n            className=\"button--secondary mt-4\"\r\n          >\r\n            Ver Certificado\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelCompletionModal;\r\n    "],"names":[],"mappings":";;;;AAAA;;AAUA,MAAM,uBAA4D,CAAC,EACjE,KAAK,EACL,QAAQ,EACR,OAAO,EACR;IACC,wCAAwC;IACxC,MAAM,YAAY;QAChB,cAAc;YACZ,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;YACnC,aAAa;YACb,MAAM;QACR;QACA,YAAY;YACV,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC;YACnC,aAAa;YACb,MAAM;QACR;QACA,UAAU;YACR,OAAO,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;YACtC,aAAa;YACb,MAAM;QACR;IACF;IAEA,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,GAAG,SAAS,CAAC,MAAM;IAErD,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBACC,SAAS;oBACT,WAAU;8BACX;;;;;;8BAKD,8OAAC;oBAAI,WAAU;;sCAEb,8OAAC;4BACC,KAAK;4BACL,KAAK,CAAC,MAAM,EAAE,MAAM,WAAW,CAAC;4BAChC,WAAU;;;;;;sCAIZ,8OAAC;4BAAG,WAAU;sCAAwB;;;;;;sCAGtC,8OAAC;4BAAE,WAAU;sCAAwB;;;;;;sCAGrC,8OAAC;4BACC,SAAS,IAAM,MAAM;4BACrB,WAAU;sCACX;;;;;;;;;;;;;;;;;;;;;;;AAOX;uCAEe"}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 303, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/exams/components/ExamModal.tsx"],"sourcesContent":["\"use client\";\r\nimport React from \"react\";\r\n\r\ninterface ExamModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  moduleId: number;\r\n}\r\n\r\nconst ExamModal: React.FC<ExamModalProps> = ({ isOpen, onClose, moduleId }) => {\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\r\n      <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n        <h2 className=\"text-xl font-bold\">Iniciar Examen</h2>\r\n        <p className=\"mt-2\">¿Estás listo para comenzar?</p>\r\n        <div className=\"flex justify-end gap-4 mt-4\">\r\n          <button onClick={onClose} className=\"px-4 py-2 border rounded\">\r\n            Cancelar\r\n          </button>\r\n          <a href={`/exams/${moduleId}`} className=\"px-4 py-2 bg-blue-500 text-white rounded\">\r\n            Comenzar\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExamModal;\r\n"],"names":[],"mappings":";;;;AAAA;;AASA,MAAM,YAAsC,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE;IACxE,IAAI,CAAC,QAAQ,OAAO;IAEpB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAAoB;;;;;;8BAClC,8OAAC;oBAAE,WAAU;8BAAO;;;;;;8BACpB,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAO,SAAS;4BAAS,WAAU;sCAA2B;;;;;;sCAG/D,8OAAC;4BAAE,MAAM,CAAC,OAAO,EAAE,UAAU;4BAAE,WAAU;sCAA2C;;;;;;;;;;;;;;;;;;;;;;;AAO9F;uCAEe"}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 378, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/app/progress/pages/ProgressPage.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport levelsData from \"../module/data/modules\"; // 🔹 Importamos los datos de los módulos\r\nimport ModuleCard from \"../../progress/components/ModuleCard\";\r\nimport UserProgress from \"../../progress/components/UserProgress\";\r\nimport ExamButton from \"../../exams/components/ExamButton\";\r\nimport LevelCompletionModal from \"../../exams/components/LevelCompletionModal\";\r\nimport ExamModal from \"../../exams/components/ExamModal\"; // 🔹 Importamos el modal del examen\r\n\r\nconst ProgressPage: React.FC = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [isExamOpen, setIsExamOpen] = useState(false);\r\n  const [currentLevel, setCurrentLevel] = useState<\"Principiante\" | \"Intermedio\" | \"Avanzado\">(\"Principiante\");\r\n  const [isExamCompleted, setIsExamCompleted] = useState(false);\r\n  const [levels, setLevels] = useState(levelsData ?? []); // 🔹 Evita que `levels` sea `undefined`\r\n  const [currentModuleId, setCurrentModuleId] = useState<number | null>(null); // Para saber qué módulo se está evaluando\r\n\r\n  // 🔹 Desbloquea el siguiente módulo si el usuario aprueba el examen\r\n  const unlockNextModule = (moduleId: number) => {\r\n    setLevels((prevLevels) =>\r\n      prevLevels.map((level) => ({\r\n        ...level,\r\n        modules: level.modules.map((module) => {\r\n          if (module.id === moduleId) {\r\n            return { ...module, status: \"completed\" }; // Marca el actual como completado\r\n          }\r\n          if (module.id === moduleId + 1 && module.status === \"locked\") {\r\n            return { ...module, status: \"active\" }; // Desbloquea el siguiente módulo\r\n          }\r\n          return module;\r\n        }),\r\n      }))\r\n    );\r\n  };\r\n\r\n  // 🔹 Se ejecuta cuando el usuario aprueba un examen\r\n  const handleExamPassed = () => {\r\n    if (currentModuleId !== null) {\r\n      unlockNextModule(currentModuleId);\r\n      setShowModal(true);\r\n      setIsExamCompleted(true);\r\n      setIsExamOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"p-6\">\r\n      <UserProgress\r\n        username=\"Camila Gómez\"\r\n        levels={[\r\n          { id: 1, label: \"Principiante\", completedIcon: \"/assets/level-1-completed.png\", lockedIcon: undefined, state: \"completed\" },\r\n          { id: 2, label: \"Intermedio\", completedIcon: \"/assets/level-2-completed.png\", lockedIcon: \"/assets/level-2-locked.png\", state: \"in-progress\" },\r\n          { id: 3, label: \"Avanzado\", completedIcon: \"/assets/level-3-completed.png\", lockedIcon: \"/assets/level-3-locked.png\", state: \"locked\" },\r\n        ]}\r\n      />\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {levels.map((level) => {\r\n          const allModulesCompleted = level.modules.every((module) => module.status === \"completed\");\r\n\r\n          return (\r\n            <div key={level.id} className=\"flex flex-col gap-4\">\r\n              <h2 className=\"text-lg font-bold text-primary P16\">{level.title}</h2>\r\n              <p className=\"text-sm text-neutral-600\">{level.subtitle}</p>\r\n\r\n              <div className=\"flex flex-col gap-2\">\r\n                {level.modules.map((module) => (\r\n                  <ModuleCard\r\n                  key={module.id}\r\n                  title={module.title}\r\n                  status={module?.status ?? \"locked\"}\r\n                  href={module.status !== \"locked\" ? `/progress/module/${module.id}` : undefined}\r\n                />\r\n                \r\n                \r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"mt-6 flex flex-col items-center\">\r\n                <p className=\"p16 text-neutral-600 mb-4\">\r\n                  {allModulesCompleted ? `Avanza al examen del nivel ${level.title}` : `Inicia el examen del nivel ${level.title}`}\r\n                </p>\r\n                <ExamButton isDisabled={!allModulesCompleted || isExamCompleted} onClick={() => {\r\n                  setCurrentModuleId(level.modules[0]?.id ?? null); // 🔹 Verificamos que exista el módulo\r\n                  setIsExamOpen(true); // Abrimos el modal\r\n                }}>\r\n                  Comenzar examen\r\n                </ExamButton>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {showModal && <LevelCompletionModal level={currentLevel} username=\"Camila Gómez\" onClose={() => setShowModal(false)} />}\r\n\r\n      {isExamOpen && <ExamModal isOpen={isExamOpen} onClose={() => setIsExamOpen(false)} moduleId={currentModuleId ?? 0} onExamPassed={handleExamPassed} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressPage;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}