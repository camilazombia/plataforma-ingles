{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://D%3A/plataforma/plataforma-ingles/components/exercises/BackButton.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useRouter } from \"next/navigation\";\r\nimport Image from \"next/image\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\ninterface BackButtonProps {\r\n  onClick?: () => void;\r\n  label?: string;\r\n  theme?: \"light\" | \"dark\";\r\n}\r\n\r\nconst BackButton: React.FC<BackButtonProps> = ({ onClick, label = \"Volver a Niveles\", theme }) => {\r\n  const router = useRouter();\r\n  const [currentTheme, setCurrentTheme] = useState(theme || \"light\");\r\n\r\n  useEffect(() => {\r\n    if (!theme) {\r\n      const prefersDark = window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n      setCurrentTheme(prefersDark ? \"dark\" : \"light\");\r\n    }\r\n  }, [theme]);\r\n\r\n  const handleBack = () => {\r\n    if (onClick) {\r\n      onClick();\r\n    } else {\r\n      router.back();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleBack}\r\n      className=\"flex items-center gap-2 text-gray-900 hover:text-gray-700 font-medium p-2 transition duration-300\"\r\n    >\r\n      <Image\r\n        src={`/assets/${currentTheme}/arrow-left.svg`}\r\n        alt=\"Volver\"\r\n        width={20}\r\n        height={20}\r\n      />\r\n      {label}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BackButton;\r\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAYA,MAAM,aAAwC,CAAC,EAAE,OAAO,EAAE,QAAQ,kBAAkB,EAAE,KAAK,EAAE;IAC3F,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,SAAS;IAE1D,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,OAAO;YACV,MAAM,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO;YAC7E,gBAAgB,cAAc,SAAS;QACzC;IACF,GAAG;QAAC;KAAM;IAEV,MAAM,aAAa;QACjB,IAAI,SAAS;YACX;QACF,OAAO;YACL,OAAO,IAAI;QACb;IACF;IAEA,qBACE,8OAAC;QACC,SAAS;QACT,WAAU;;0BAEV,8OAAC,6HAAA,CAAA,UAAK;gBACJ,KAAK,CAAC,QAAQ,EAAE,aAAa,eAAe,CAAC;gBAC7C,KAAI;gBACJ,OAAO;gBACP,QAAQ;;;;;;YAET;;;;;;;AAGP;uCAEe"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}